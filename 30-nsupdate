### /etc/hotplug.d/iface/30-nsupdate
###
### Update the WAN interface's IPv4 address (A) record in the DNS
### using the DNS UPDATE protocol.
###
### Author:       Simon Leinen  <simon.leinen@gmail.com>
### Date Created: 10-Apr-2014
###
### based on instructions by Justin Foell found on
### http://www.foell.org/justin/diy-dynamic-dns-with-openwrt-bind/
###
### I had to update Justin's script a little:
###
### 1) My WAN interface is called "ge00", not "wan".
### 2) scan_interfaces fails to put the WAN interface's IPv4 address
###    in a CONFIG_ variable.  Therefore, we use a fallback method to
###    get it using "ip -4 addr show"
###
### Note that this needs the "bind-client" package installed.
###
### Tested on a WNDR3700v2 under CeroWrt Vancouver 3.10.18-1
###
### I could not get this script to work so i decided to update it and added
### the following:
###
### 1. Added autodetect of the WAN interface
### 2. Used built in logging facility in OpenWRT
###
### This has been tested on a TP-Link Archer 7 v4 OpenWRT SNAPSHOT r6953-aa30eb5
###

### Operations
### To get TSIG key from PowerDNS run the following command
### pdnssec list-tsig-keys | grep "dyndns" | cut -d " " -f 3
###
### Newer versions of PowerDNS should run the following instead
### pdnsutil list-tsig-keys | grep "dyndns" | cut -d " " -f 3

## Autodetect the name of the "WAN" interface (usually only one)
wan=$(uci -P /var/state get network.wan.ifname)

## Tag and facility under which messages are logged
facility=daemon
tag="30-nsupdate[$$]"

## Authoritative name server to update
nameserver=ns1.2web.se

## Zone to update
zonename=orbitxp.com

## Hostname to update
hostname=f16.${zonename}

## Desired TTL (time-to-live), in seconds
ttl=300

## TSIG key
keyName=dyndns
keyString=<obfuscated>

logger -t ${tag} -p ${facility}.info "Testing if hotplugged DEVICE is WAN interface"
[ "$DEVICE" != "${wan}" ] && exit 0

logger -t ${tag} -p ${facility}.info "Testing if INTERFACE is up and we have anything to update"
[ "$ACTION" != "ifup" ] && [ "$ACTION" != "update" ] && exit 0

## ## scan_interfaces puts a bunch of information in CONFIG_ variables.
## ## But on my router, it fails to get the IP address of the WAN interface
## ## (ge00).  Maybe this is because it isn't configured, but assigned
## ## via DHCP? Anyway, we have to use a fallback method to get the address.
ipaddr=$(ip -4 addr show dev ${wan} | grep inet | sed -e 's/.*inet \([.0-9]*\).*/\1/')

## Now we construct a DNS UPDATE packet and send it to the
## authoritative server.  We need to provide key material to authenticate.
##
echo "server $nameserver
zone ${zonename}
key ${keyName} ${keyString}
update delete ${hostname}. IN A
update add ${hostname}. ${ttl} IN A $ipaddr
send" | nsupdate || logger -t ${tag} -p ${facility}.error "Update $hostname IN A $ipaddr failed"
logger -t ${tag} -p ${facility}.info "Updated $hostname IN A $ipaddr"
